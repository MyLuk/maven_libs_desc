package ru.factorts.page;

import com.codeborne.selenide.Condition;
import com.codeborne.selenide.Configuration;
import com.codeborne.selenide.SelenideElement;
import io.github.bonigarcia.wdm.ChromeDriverManager;
import io.github.bonigarcia.wdm.DriverManagerType;
import junitparams.JUnitParamsRunner;
import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TestName;
import org.junit.runner.RunWith;
import org.junit.runners.MethodSorters;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import static com.codeborne.selenide.Selenide.open;
import static com.codeborne.selenide.Selenide.sleep;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
@RunWith(JUnitParamsRunner.class)
public class perevod {

    PerevodPage perevodPage = new PerevodPage();
    HashMap<String, String> table=new HashMap<String, String>();;
    @Rule
    public TestName testName = new TestName();

    @Before
    public void setUpQueue() {
        Configuration.browserCapabilities.setCapability("name", testName.getMethodName());
//        openPage("/manager/");
    }


    @Test
    public void parsing() {
        ArrayList<String> files = new ArrayList<>();
        String russanAnswer = null;
        try {
            File file = new File("C:\\Users\\wunsh\\IdeaProjects\\spring-jms-master\\maven_libs_desc\\src\\main\\java\\resources\\namePackage2.txt");
            //создаем объект FileReader для объекта File
            FileReader fr = new FileReader(file);
            //создаем BufferedReader с существующего FileReader для построчного считывания
            BufferedReader reader = new BufferedReader(fr);
            // считаем сначала первую строку
            String line = reader.readLine();
            while (line != null) {
                files.add(line);
                // считываем остальные строки в цикле
                line = reader.readLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }


        System.out.println(files);
        String[] names = {"antlr:antlr", "aopalliance:aopalliance", "args4j:args4j", "ch.qos.logback:logback-classic", "ch.qos.logback:logback-core", "classworlds:classworlds", "com.atomikos:atomikos-util", "com.atomikos:transactions", "com.atomikos:transactions-api", "com.atomikos:transactions-jdbc", "com.atomikos:transactions-jms", "com.atomikos:transactions-jta", "com.beust:jcommander", "com.codepoetics:protonpack", "com.damnhandy:handy-uri-templates", "com.fasterxml.jackson.core:jackson-annotations", "com.fasterxml.jackson.core:jackson-core", "com.fasterxml.jackson.core:jackson-databind", "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", "com.fasterxml.jackson.datatype:jackson-datatype-joda", "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base", "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider", "com.fasterxml.jackson.module:jackson-module-jaxb-annotations", "com.fasterxml.woodstox:woodstox-core", "com.fasterxml:classmate", "com.fasterxml:classmate", "com.fazecast:jSerialComm", "com.flipkart.zjsonpatch:zjsonpatch", "com.github.atomashpolskiy:bt-bencoding", "com.github.atomashpolskiy:bt-core", "com.github.atomashpolskiy:bt-dht", "com.github.atomashpolskiy:bt-http-tracker-client", "com.github.dozermapper:dozer-core", "com.github.dozermapper:dozer-schema", "com.github.everit-org.json-schema:org.everit.json.schema", "com.github.jai-imageio:jai-imageio-core", "com.github.jknack:handlebars", "com.github.jknack:handlebars-helpers", "com.github.jnr:jffi", "com.github.jnr:jffi", "com.github.jnr:jnr-constants", "com.github.jnr:jnr-ffi", "com.github.jnr:jnr-posix", "com.github.jnr:jnr-x86asm", "com.github.luben:zstd-jni", "com.github.tomakehurst:wiremock-jre8", "com.google.code.findbugs:annotations", "com.google.code.findbugs:annotations", "com.google.code.findbugs:jsr305", "com.google.code.findbugs:jsr305", "com.google.code.gson:gson", "com.google.code.gson:gson", "com.google.code.javaparser:javaparser", "com.google.errorprone:error_prone_annotations", "com.google.guava:guava", "com.google.inject.extensions:guice-multibindings", "com.google.inject:guice", "com.google.inject:guice", "com.google.j2objc:j2objc-annotations", "com.google.zxing:core", "com.google.zxing:javase", "com.googlecode.javaewah:JavaEWAH", "com.googlecode.json-simple:json-simple", "com.h2database:h2", "com.ibm.mq:com.ibm.mq.allclient", "com.infradna.tool:bridge-method-annotation", "com.jayway.jsonpath:json-path", "com.jcraft:jsch", "com.jcraft:jsch", "com.jcraft:jzlib", "com.kohlschutter.junixsocket:junixsocket-common", "com.kohlschutter.junixsocket:junixsocket-native-common", "com.rabbitmq:amqp-client", "com.rometools:rome", "com.rometools:rome-utils", "com.sparkjava:spark-core", "com.squareup.okhttp3:okhttp", "com.squareup.okio:okio", "com.squareup.retrofit2:converter-gson", "com.squareup.retrofit2:retrofit", "com.sun.codemodel:codemodel", "com.sun.mail:javax.mail", "com.sun.solaris:embedded_su4j", "com.sun.xml.bind:jaxb-core", "com.sun.xml.bind:jaxb-impl", "com.sun.xml.bind:jaxb-xjc", "com.sun.xml.txw2:txw2", "com.thoughtworks.xstream:xstream", "com.thoughtworks.xstream:xstream", "com.vaadin.external.google:android-json", "commons-beanutils:commons-beanutils", "commons-codec:commons-codec", "commons-collections:commons-collections", "commons-dbcp:commons-dbcp", "commons-digester:commons-digester", "commons-discovery:commons-discovery", "commons-fileupload:commons-fileupload", "commons-fileupload:commons-fileupload", "commons-httpclient:commons-httpclient", "commons-httpclient:commons-httpclient", "commons-io:commons-io", "commons-io:commons-io", "commons-io:commons-io", "commons-jelly:commons-jelly-tags-fmt", "commons-jelly:commons-jelly-tags-xml", "commons-lang:commons-lang", "commons-logging:commons-logging", "commons-logging:commons-logging", "commons-logging:commons-logging", "commons-net:commons-net", "commons-pool:commons-pool", "commons-validator:commons-validator", "crypto:crypto-server-lib", "io.dropwizard.metrics:metrics-core", "io.dropwizard.metrics:metrics-core", "io.dropwizard.metrics:metrics-json", "io.netty:netty-all", "io.netty:netty-buffer", "io.netty:netty-codec", "io.netty:netty-common", "io.netty:netty-handler", "io.netty:netty-transport", "io.springfox:springfox-core", "io.springfox:springfox-schema", "io.springfox:springfox-spi", "io.springfox:springfox-spring-web", "io.springfox:springfox-swagger2", "io.springfox:springfox-swagger-common", "io.springfox:springfox-swagger-ui", "io.swagger:swagger-annotations", "io.swagger:swagger-annotations", "io.swagger:swagger-core", "io.swagger:swagger-jaxrs", "io.swagger:swagger-models", "io.swagger:swagger-parser", "jarapac:jarapac", "jarapac:jcifs", "jarapac:ncacn_ip_tcp", "javax.activation:activation", "javax.annotation:javax.annotation-api", "javax.annotation:javax.annotation-api", "javax.cache:cache-api", "javax.el:javax.el-api", "javax.inject:javax.inject", "javax.jms:javax.jms-api", "javax.mail:mail", "javax.resource:javax.resource-api", "javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api", "javax.servlet:javax.servlet-api", "javax.transaction:javax.transaction-api", "javax.validation:validation-api", "javax.validation:validation-api", "javax.websocket:javax.websocket-api", "javax.websocket:javax.websocket-client-api", "javax.ws.rs:javax.ws.rs-api", "javax.ws.rs:jsr311-api", "javax.xml.bind:jaxb-api", "javax.xml.stream:stax-api", "javax:javaee-api", "jaxen:jaxen", "jfree:jcommon", "jfree:jfreechart", "jline:jline", "joda-time:joda-time", "junit:junit", "log4j:log4j", "log4j:log4j", "net.bramp.ffmpeg:ffmpeg", "net.bytebuddy:byte-buddy", "net.i2p.crypto:eddsa", "net.java.dev.jna:jna", "net.java.dev.jna:jna-platform", "net.java.sezpoz:sezpoz", "net.javacrumbs.json-unit:json-unit-core", "net.lingala.zip4j:zip4j", "net.minidev:accessors-smart", "net.minidev:json-smart", "net.sf.ehcache:ehcache", "net.sf.ezmorph:ezmorph", "net.sf.jopt-simple:jopt-simple", "net.sf.json-lib:json-lib", "net.sf.saxon:Saxon-HE", "net.sourceforge.collections:collections-generic", "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect", "ognl:ognl", "org.abego.treelayout:org.abego.treelayout.core", "org.acegisecurity:acegi-security", "org.antlr:antlr4-runtime", "org.apache.activemq.protobuf:activemq-protobuf", "org.apache.activemq:activemq-amqp", "org.apache.activemq:activemq-broker", "org.apache.activemq:activemq-camel", "org.apache.activemq:activemq-camel", "org.apache.activemq:activemq-client", "org.apache.activemq:activemq-http", "org.apache.activemq:activemq-jaas", "org.apache.activemq:activemq-jms-pool", "org.apache.activemq:activemq-kahadb-store", "org.apache.activemq:activemq-mqtt", "org.apache.activemq:activemq-openwire-legacy", "org.apache.activemq:activemq-pool", "org.apache.activemq:activemq-spring", "org.apache.activemq:activemq-stomp", "org.apache.activemq:activemq-web", "org.apache.ant:ant", "org.apache.ant:ant-launcher", "org.apache.camel:camel-barcode", "org.apache.camel:camel-base64", "org.apache.camel:camel-cache", "org.apache.camel:camel-core", "org.apache.camel:camel-core", "org.apache.camel:camel-crypto", "org.apache.camel:camel-csv", "org.apache.camel:camel-cxf", "org.apache.camel:camel-cxf-transport", "org.apache.camel:camel-dozer", "org.apache.camel:camel-ehcache", "org.apache.camel:camel-exec", "org.apache.camel:camel-ftp", "org.apache.camel:camel-ftp-server", "org.apache.camel:camel-groovy", "org.apache.camel:camel-http4", "org.apache.camel:camel-http-common", "org.apache.camel:camel-jackson", "org.apache.camel:camel-jaxb", "org.apache.camel:camel-jetty9", "org.apache.camel:camel-jetty-common", "org.apache.camel:camel-jms", "org.apache.camel:camel-jms", "org.apache.camel:camel-jpa", "org.apache.camel:camel-json-validator", "org.apache.camel:camel-kafka", "org.apache.camel:camel-ldap", "org.apache.camel:camel-leveldb", "org.apache.camel:camel-leveldb", "org.apache.camel:camel-mail", "org.apache.camel:camel-metrics", "org.apache.camel:camel-milo", "org.apache.camel:camel-mina2", "org.apache.camel:camel-netty4", "org.apache.camel:camel-printer", "org.apache.camel:camel-rabbitmq", "org.apache.camel:camel-rest-swagger", "org.apache.camel:camel-saxon", "org.apache.camel:camel-script", "org.apache.camel:camel-sjms", "org.apache.camel:camel-spark-rest", "org.apache.camel:camel-spring", "org.apache.camel:camel-spring", "org.apache.camel:camel-spring-ws", "org.apache.camel:camel-sql", "org.apache.camel:camel-ssh", "org.apache.camel:camel-stream", "org.apache.camel:camel-swagger-java", "org.apache.camel:camel-syslog", "org.apache.camel:camel-telegram", "org.apache.camel:camel-test", "org.apache.camel:camel-test-spring", "org.apache.camel:camel-websocket", "org.apache.camel:camel-xmljson", "org.apache.camel:camel-xstream", "org.apache.camel:camel-zipfile", "org.apache.commons:commons-collections4", "org.apache.commons:commons-compress", "org.apache.commons:commons-compress", "org.apache.commons:commons-compress", "org.apache.commons:commons-csv", "org.apache.commons:commons-exec", "org.apache.commons:commons-lang3", "org.apache.commons:commons-lang3", "org.apache.commons:commons-lang3", "org.apache.commons:commons-lang3", "org.apache.commons:commons-math3", "org.apache.commons:commons-pool2", "org.apache.commons:commons-text", "org.apache.cxf:cxf-core", "org.apache.cxf:cxf-core", "org.apache.cxf:cxf-rt-bindings-soap", "org.apache.cxf:cxf-rt-bindings-xml", "org.apache.cxf:cxf-rt-databinding-jaxb", "org.apache.cxf:cxf-rt-frontend-jaxrs", "org.apache.cxf:cxf-rt-frontend-jaxws", "org.apache.cxf:cxf-rt-frontend-simple", "org.apache.cxf:cxf-rt-rs-client", "org.apache.cxf:cxf-rt-transports-http", "org.apache.cxf:cxf-rt-transports-http-jetty", "org.apache.cxf:cxf-rt-ws-addr", "org.apache.cxf:cxf-rt-ws-policy", "org.apache.cxf:cxf-rt-wsdl", "org.apache.ftpserver:ftplet-api", "org.apache.ftpserver:ftpserver-core", "org.apache.geronimo.specs:geronimo-j2ee-management_1.1_spec", "org.apache.geronimo.specs:geronimo-jms_1.1_spec", "org.apache.geronimo.specs:geronimo-jms_2.0_spec", "org.apache.geronimo.specs:geronimo-jta_1.1_spec", "org.apache.httpcomponents:httpclient", "org.apache.httpcomponents:httpcore", "org.apache.ignite:ignite-core", "org.apache.ignite:ignite-indexing", "org.apache.ignite:ignite-spring", "org.apache.kafka:kafka-clients", "org.apache.lucene:lucene-analyzers-common", "org.apache.lucene:lucene-core", "org.apache.lucene:lucene-queries", "org.apache.lucene:lucene-queryparser", "org.apache.lucene:lucene-sandbox", "org.apache.mina:mina-core", "org.apache.mina:mina-core", "org.apache.neethi:neethi", "org.apache.qpid:proton-j", "org.apache.santuario:xmlsec", "org.apache.sshd:sshd-core", "org.apache.ws.xmlschema:xmlschema-core", "org.apache.ws.xmlschema:xmlschema-core", "org.apache.xbean:xbean-spring", "org.apache.xmlbeans:xmlbeans", "org.apache-extras.camel-extra:camel-jcifs", "org.aspectj:aspectjweaver", "org.assertj:assertj-core", "org.bouncycastle:bcpg-jdk15on", "org.bouncycastle:bcpkix-jdk15on", "org.bouncycastle:bcprov-jdk15on", "org.codehaus.groovy:groovy", "org.codehaus.groovy:groovy-all", "org.codehaus.groovy:groovy-all", "org.codehaus.jackson:jackson-core-asl", "org.codehaus.jackson:jackson-mapper-asl", "org.codehaus.jettison:jettison", "org.codehaus.mojo:animal-sniffer-annotations", "org.codehaus.plexus:plexus-archiver", "org.codehaus.plexus:plexus-container-default", "org.codehaus.plexus:plexus-io", "org.codehaus.plexus:plexus-utils", "org.codehaus.woodstox:stax2-api", "org.codehaus.woodstox:woodstox-core-asl", "org.codehaus.woodstox:wstx-asl", "org.connectbot.jbcrypt:jbcrypt", "org.conscrypt:conscrypt-openjdk-uber", "org.eclipse.jetty.http2:http2-common", "org.eclipse.jetty.http2:http2-hpack", "org.eclipse.jetty.http2:http2-server", "org.eclipse.jetty.websocket:javax-websocket-client-impl", "org.eclipse.jetty.websocket:javax-websocket-server-impl", "org.eclipse.jetty.websocket:websocket-api", "org.eclipse.jetty.websocket:websocket-client", "org.eclipse.jetty.websocket:websocket-common", "org.eclipse.jetty.websocket:websocket-server", "org.eclipse.jetty.websocket:websocket-servlet", "org.eclipse.jetty:jetty-alpn-client", "org.eclipse.jetty:jetty-alpn-conscrypt-client", "org.eclipse.jetty:jetty-alpn-conscrypt-server", "org.eclipse.jetty:jetty-alpn-server", "org.eclipse.jetty:jetty-annotations", "org.eclipse.jetty:jetty-client", "org.eclipse.jetty:jetty-continuation", "org.eclipse.jetty:jetty-http", "org.eclipse.jetty:jetty-io", "org.eclipse.jetty:jetty-jmx", "org.eclipse.jetty:jetty-jndi", "org.eclipse.jetty:jetty-plus", "org.eclipse.jetty:jetty-security", "org.eclipse.jetty:jetty-server", "org.eclipse.jetty:jetty-servlet", "org.eclipse.jetty:jetty-servlets", "org.eclipse.jetty:jetty-util", "org.eclipse.jetty:jetty-webapp", "org.eclipse.jetty:jetty-xml", "org.eclipse.jgit:org.eclipse.jgit.http.apache", "org.eclipse.jgit:org.eclipse.jgit.http.server", "org.eclipse.jgit:org.eclipse.jgit", "org.eclipse.milo:sdk-client", "org.eclipse.milo:sdk-core", "org.eclipse.milo:sdk-server", "org.eclipse.milo:stack-client", "org.eclipse.milo:stack-core", "org.eclipse.milo:stack-server", "org.ehcache:ehcache", "org.fusesource.hawtbuf:hawtbuf", "org.fusesource.hawtdispatch:hawtdispatch", "org.fusesource.hawtdispatch:hawtdispatch-transport", "org.fusesource.hawtjni:hawtjni-runtime", "org.fusesource.jansi:jansi", "org.fusesource.leveldbjni:leveldbjni", "org.fusesource.leveldbjni:leveldbjni-all", "org.fusesource.mqtt-client:mqtt-client", "org.glassfish.web:javax.el", "org.gridgain:ignite-shmem", "org.hamcrest:hamcrest", "org.hamcrest:hamcrest-core", "org.hamcrest:hamcrest-library", "org.hamcrest:hamcrest-library", "org.hibernate:hibernate-validator", "org.hibernate:hibernate-validator", "org.iq80.leveldb:leveldb", "org.iq80.leveldb:leveldb-api", "org.iq80.leveldb:leveldb-api", "org.javassist:javassist", "org.jboss.logging:jboss-logging", "org.jdom:jdom2", "org.jenkins-ci.dom4j:dom4j", "org.jenkins-ci.main:cli", "org.jenkins-ci.main:jenkins-core", "org.jenkins-ci.main:remoting", "org.jenkins-ci.plugins.icon-shim:icon-set", "org.jenkins-ci.plugins.workflow:workflow-scm-step", "org.jenkins-ci.plugins.workflow:workflow-step-api", "org.jenkins-ci.plugins:credentials", "org.jenkins-ci.plugins:display-url-api", "org.jenkins-ci.plugins:git", "org.jenkins-ci.plugins:git-client", "org.jenkins-ci.plugins:junit", "org.jenkins-ci.plugins:mailer", "org.jenkins-ci.plugins:matrix-project", "org.jenkins-ci.plugins:scm-api", "org.jenkins-ci.plugins:script-security", "org.jenkins-ci.plugins:ssh-credentials", "org.jenkins-ci.plugins:structs", "org.jenkins-ci:annotation-indexer", "org.jenkins-ci:bytecode-compatibility-transformer", "org.jenkins-ci:commons-jelly", "org.jenkins-ci:commons-jexl", "org.jenkins-ci:constant-pool-scanner", "org.jenkins-ci:crypto-util", "org.jenkins-ci:jmdns", "org.jenkins-ci:memory-monitor", "org.jenkins-ci:symbol-annotation", "org.jenkins-ci:task-reactor", "org.jenkins-ci:trilead-ssh2", "org.jenkins-ci:version-number", "org.jetbrains:annotations", "org.jetbrains:annotations", "org.jooq:jool", "org.jooq:jooq", "org.jooq:jooq-meta", "org.jooq:joox", "org.jruby.ext.posix:jna-posix", "org.json:json", "org.jsonschema2pojo:jsonschema2pojo-core", "org.jsonschema2pojo:jsonschema2pojo-scalagen", "org.jsoup:jsoup", "org.jvnet.hudson:activation", "org.jvnet.hudson:commons-jelly-tags-define", "org.jvnet.hudson:jtidy", "org.jvnet.hudson:xstream", "org.jvnet.localizer:localizer", "org.jvnet.robust-http-client:robust-http-client", "org.jvnet.winp:winp", "org.jvnet:tiger-types", "org.kohsuke.jinterop:j-interop", "org.kohsuke.jinterop:j-interopdeps", "org.kohsuke.stapler:json-lib", "org.kohsuke.stapler:stapler", "org.kohsuke.stapler:stapler-adjunct-codemirror", "org.kohsuke.stapler:stapler-adjunct-timeline", "org.kohsuke.stapler:stapler-adjunct-zeroclipboard", "org.kohsuke.stapler:stapler-groovy", "org.kohsuke.stapler:stapler-jelly", "org.kohsuke.stapler:stapler-jrebel", "org.kohsuke:access-modifier-annotation", "org.kohsuke:akuma", "org.kohsuke:asm5", "org.kohsuke:groovy-sandbox", "org.kohsuke:libpam4j", "org.kohsuke:libzfs", "org.kohsuke:trilead-putty-extension", "org.kohsuke:windows-package-checker", "org.lz4:lz4-java", "org.mapstruct:mapstruct", "org.mockftpserver:MockFtpServer", "org.mockito:mockito-all", "org.mockito:mockito-core", "org.modelmapper:modelmapper", "org.mortbay.jasper:apache-el", "org.objenesis:objenesis", "org.opentest4j:opentest4j", "org.ow2.asm:asm", "org.ow2.asm:asm", "org.ow2.asm:asm", "org.ow2.asm:asm", "org.ow2.asm:asm-analysis", "org.ow2.asm:asm-analysis", "org.ow2.asm:asm-commons", "org.ow2.asm:asm-commons", "org.ow2.asm:asm-tree", "org.ow2.asm:asm-tree", "org.ow2.asm:asm-util", "org.projectlombok:lombok", "org.projectlombok:lombok", "org.projectlombok:lombok", "org.reflections:reflections", "org.rnorth.duct-tape:duct-tape", "org.rnorth.visible-assertions:visible-assertions", "org.rnorth:tcp-unix-socket-proxy", "org.samba.jcifs:jcifs", "org.scala-lang:scala-library", "org.scijava:native-lib-loader", "org.skyscreamer:jsonassert", "org.slf4j:jcl-over-slf4j", "org.slf4j:jcl-over-slf4j", "org.slf4j:jul-to-slf4j", "org.slf4j:jul-to-slf4j", "org.slf4j:log4j-over-slf4j", "org.slf4j:log4j-over-slf4j", "org.slf4j:slf4j-api", "org.slf4j:slf4j-api", "org.slf4j:slf4j-api", "org.slf4j:slf4j-api", "org.slf4j:slf4j-log4j12", "org.slf4j:slf4j-log4j12", "org.slf4j:slf4j-simple", "org.springframework.boot:spring-boot", "org.springframework.boot:spring-boot-actuator", "org.springframework.boot:spring-boot-autoconfigure", "org.springframework.boot:spring-boot-configuration-processor", "org.springframework.boot:spring-boot-devtools", "org.springframework.boot:spring-boot-starter", "org.springframework.boot:spring-boot-starter-activemq", "org.springframework.boot:spring-boot-starter-jetty", "org.springframework.boot:spring-boot-starter-logging", "org.springframework.boot:spring-boot-starter-security", "org.springframework.boot:spring-boot-starter-test", "org.springframework.boot:spring-boot-starter-thymeleaf", "org.springframework.boot:spring-boot-starter-web", "org.springframework.boot:spring-boot-starter-websocket", "org.springframework.boot:spring-boot-test", "org.springframework.boot:spring-boot-test-autoconfigure", "org.springframework.data:spring-data-commons", "org.springframework.integration:spring-integration-core", "org.springframework.integration:spring-integration-core", "org.springframework.ldap:spring-ldap-core", "org.springframework.plugin:spring-plugin-core", "org.springframework.plugin:spring-plugin-metadata", "org.springframework.retry:spring-retry", "org.springframework.security:spring-security-config", "org.springframework.security:spring-security-core", "org.springframework.security:spring-security-ldap", "org.springframework.security:spring-security-web", "org.springframework.session:spring-session", "org.springframework.ws:spring-ws-core", "org.springframework.ws:spring-ws-support", "org.springframework.ws:spring-xml", "org.springframework:spring-aop", "org.springframework:spring-aspects", "org.springframework:spring-beans", "org.springframework:spring-context", "org.springframework:spring-core", "org.springframework:spring-expression", "org.springframework:spring-jdbc", "org.springframework:spring-jms", "org.springframework:spring-messaging", "org.springframework:spring-orm", "org.springframework:spring-oxm", "org.springframework:spring-test", "org.springframework:spring-tx", "org.springframework:spring-web", "org.springframework:spring-webmvc", "org.springframework:spring-websocket", "org.testcontainers:testcontainers", "org.thymeleaf:thymeleaf", "org.thymeleaf:thymeleaf-spring4", "org.unbescape:unbescape", "org.webjars:swagger-ui", "org.webjars:webjars-locator", "org.webjars:webjars-locator-core", "org.xerial.snappy:snappy-java", "org.xmlunit:xmlunit-core", "org.xmlunit:xmlunit-legacy", "org.xmlunit:xmlunit-placeholders", "org.yaml:snakeyaml", "oro:oro", "relaxngDatatype:relaxngDatatype", "ru.factorts:wmq-repository", "stax:stax-api", "wsdl4j:wsdl4j", "xalan:serializer", "xalan:xalan", "xerces:xercesImpl", "xml-apis:xml-apis", "xml-resolver:xml-resolver", "xmlpull:xmlpull", "xom:xom", "xpp3:xpp3", "xpp3:xpp3_min"};
        String[] values = {"Является мощным генератором парсера для чтения, обработки, выполнения или перевода структурированного текста или двоичных файлов", "Aopalliance", "Парсер аргументов командной строки Java", "Logback: универсальная, надежная, быстрая и гибкая библиотека журналов для Java.", "Logback: универсальная, надежная, быстрая и гибкая библиотека журналов для Java.", "Платформа для разработчиков контейнеров, которые требуют сложных манипуляций с загрузчиками классов Java.", "Управление распределенными транзакциями", "Управление распределенными транзакциями", "Управление распределенными транзакциями", "Управление распределенными транзакциями", "Управление распределенными транзакциями", "Управление распределенными транзакциями", "Библиотека анализатора командной строки для Java", "Коллекция утилит Stream для Java 8", "Handy URI Templates - это совместимый с RFC6570 шаблонный процессор URI.", "JSON парсер для Java", "JSON парсер для Java", "JSON парсер для Java", "JSON парсер для Java", "Поддержка чтения и записи YAML-кодированных данных через абстракции Джексона.", "Дополнительный модуль для Jackson (http://github.com/FasterXML/jackson) для поддержки типов данных Joda (https://www.joda.org/joda-time/).", "Дополнительный модуль для поддержки типов данных JSR-310 (Java 8 Date and Time API).", "JSON парсер для Java", "JSON парсер для Java", "JSON парсер для Java", "Woodstox - это высокопроизводительный процессор XML, который реализует API-интерфейсы Stax (JSR-173) и SAX2", "Библиотека для анализа типов с полной общей информацией, включая разрешение типов полей и методов", "Библиотека для анализа типов с полной общей информацией, включая разрешение типов полей и методов", "Независимая от платформы библиотека последовательной связи для Java.", "Библиотека Java для поиска / применения патчей JSON в соответствии с RFC 6902", "Библиотека для разбора, кодирования и проверки закодированных документов в Java", "Клиентская библиотека BitTorrent", "Mainline DHT (libmldht) адаптер для клиента Bt BitTorrent", "Библиотека для интеграции с HTTP BitTorrent-трекерами", "Преобразователь Java Bean в Java Bean, который рекурсивно копирует данные из одного объекта в другой.", "Преобразователь Java Bean в Java Bean, который рекурсивно копирует данные из одного объекта в другой.", "Реализация спецификации JSON Schema Core Draft v4, созданной с помощью API org.json", "Ядро API Advanced Imaging Image I / O Tools, но без классов, связанных с зависимостями javax.media.jai, JPEG2000 или codecLibJIIO, что означает, что эта библиотека может распространяться по модифицированной лицензии BSD и должна быть совместима с GPL.", "Логические и семантические шаблоны Java", "Коллекция обработчиков", "Интерфейс внешних функций Java", "Интерфейс внешних функций Java", "Набор констант платформы (например, значения errno)", "Библиотека для вызова нативных функций из Java", "Общие кросс-проектные / кроссплатформенные API POSIX", "Чисто-Java X86 и X86_64 ассемблер", "Привязки JNI для собственной библиотеки Zstd, которая обеспечивает быстрый и высокий алгоритм сжатия без потерь для Java и всех языков JVM.", "Тест веб-сервиса на все случаи жизни", "Аннотация поддерживает инструмент FindBugs", "Аннотация поддерживает инструмент FindBugs", "Поддержка проекта аннотации jsr305", "Поддержка проекта аннотации jsr305", "Библиотека Google Gson", "Библиотека Google Gson", "Парсер", "Подверженные ошибкам аннотации", "Guava - это набор базовых и расширенных библиотек, которые включают в себя служебные классы, коллекции Google, io-классы и многое другое.", "Инструменты, внедряющие коллекции связанных значений", "Guice (произносится «сок») - это облегченная среда внедрения зависимостей для Java 5, представленная вам Google.", "Guice (произносится «сок») - это облегченная среда внедрения зависимостей для Java 5, представленная вам Google.", "Набор аннотаций, которые предоставляют дополнительную информацию переводчику J2ObjC для изменения результата перевода.", "Базовая библиотека кодирования / декодирования штрих-кода", "Специфичные для Java SE расширения базовой библиотеки Zxing", "Структура данных битового массива реализована в Java как класс BitSet.", "Простой инструментарий Java для JSON", "H2 Database Engine", "Классы IBM MQ для Java и JMS.", "Инъекции связующего метода", "Java-порт JsonPath.", "JSch - это чистая Java-реализация SSH2", "JSch - это чистая Java-реализация SSH2", "JZlib - это повторная реализация zlib в чистой Java", "Публичный, основной API", "Двоичные файлы нативной библиотеки JNI для общих платформ", "Клиентская библиотека RabbitMQ Java позволяет коду Java взаимодействовать с серверами AMQP.", "Все дороги ведут в Рим.", "Утилиты для проектов ROME", "Вдохновленный Sinatra фреймворк Java", "HTTP-клиент", "Современный I / O API для Java", "Конвертер Gson", "Типобезопасный HTTP-клиент", "Основные функциональные возможности библиотеки генерации исходного кода Java CodeModel", "JavaMail API", "Embedded_su для Java", "Старый модуль JAXB Core.", "Старый JAXB Runtime модуль.", "Старый JAXB Binding Compiler.", "TXW2 Runtime", "Этот пакет просто оборачивает $ {pkgArtifactId} - $ {pkgVersion} .jar.", "Этот пакет просто оборачивает $ {pkgArtifactId} - $ {pkgVersion} .jar.", "JSON (JavaScript Object Notation) - это легкий формат обмена данными.", "Java Bean Utilities", "Пакет кодеков содержит простой кодер и декодеры для различных форматов, таких как Base64 и Hexadecimal.", "Типы, которые расширяют и дополняют Java Collections Framework.", "Пул соединений базы данных Commons", "Пакет Digester позволяет настроить модуль сопоставления объектов XML-Java, который запускает определенные действия, называемые правилами, при распознавании определенного шаблона вложенных элементов XML.", "Компонент Apache Commons Discovery предназначен для обнаружения или поиска реализаций подключаемых интерфейсов.", "Компонент FileUpload предоставляет простое, но гибкое средство добавления поддержки функции многоэтапной загрузки файлов в сервлеты и веб-приложения.", "Компонент FileUpload предоставляет простое, но гибкое средство добавления поддержки функции многоэтапной загрузки файлов в сервлеты и веб-приложения.", "Компонент HttpClient поддерживает клиентскую часть RFC 1945 (HTTP / 1.0) и RFC 2616 (HTTP / 1.1), несколько связанных спецификаций (RFC 2109 (Cookies), RFC 2617 (HTTP-аутентификация) и т. Д.) И обеспечивает платформу", "Компонент HttpClient поддерживает клиентскую часть RFC 1945 (HTTP / 1.0) и RFC 2616 (HTTP / 1.1), несколько связанных спецификаций (RFC 2109 (Cookies), RFC 2617 (HTTP-аутентификация) и т. Д.) И обеспечивает платформу", "Commons-IO содержит служебные классы, реализации потоков, фильтры файлов и классы байтов.", "Commons-IO содержит служебные классы, реализации потоков, фильтры файлов и классы байтов.", "Commons-IO содержит служебные классы, реализации потоков, фильтры файлов и классы байтов.", "Библиотека Jelly fmt Tag", "Библиотека Jelly XML Tag", "Commons.Lang, пакет служебных классов Java для классов, которые находятся в иерархии java.lang или считаются настолько стандартными, чтобы оправдать существование в java.lang.", "Apache Commons Logging - это тонкий адаптер, позволяющий настраивать мостовое соединение с другими, хорошо известными системами ведения журналов", "Apache Commons Logging - это тонкий адаптер, позволяющий настраивать мостовое соединение с другими, хорошо известными системами ведения журналов", "Apache Commons Logging - это тонкий адаптер, позволяющий настраивать мостовое соединение с другими, хорошо известными системами ведения журналов", "Это Java-библиотека набора интернет-протоколов, изначально разработанная ORO, Inc. Эта версия поддерживает Finger, Whois, TFTP, Telnet, POP3, FTP, NNTP, SMTP и некоторые другие протоколы, такие как Time и Echo, а также поддержку команд BSD R. Цель библиотеки - обеспечить доступ к основному протоколу, а не к абстракциям более высокого уровня. Поэтому часть дизайна нарушает принципы объектно-ориентированного проектирования. Наша философия заключается в том, чтобы сделать глобальную функциональность протокольного доступа (например, отправляющий файл TFTP и принимаемый файл), когда это возможно, но также обеспечить доступ к основным протоколам, где это применимо, чтобы программист мог создавать свои собственные пользовательские реализации (например, TFTP). классы пакетов и методы отправки и получения пакетов TFTP). Изначально NetComponents был коммерческим продуктом, но после того, как ORO распался, его продолжали делать доступным для тех, кто нашел его полезным. Однако с момента версии 1.3.8, выпущенной в 1998 году, никаких обновлений сделано не было. Теперь, когда определенные обязательства по контракту истекли, можно сделать исходный код свободно доступным в рамках лицензии на программное обеспечение Apache.", "Пул соединений базы данных Commons", "Apache Commons Validator предоставляет строительные блоки как для проверки на стороне клиента, так и для проверки данных на стороне сервера.", "Библиотека классов криптографических схем", "Metrics - это библиотека Java, которая дает вам беспрецедентное представление о том, что делает ваш код в производстве.", "Metrics - это библиотека Java, которая дает вам беспрецедентное представление о том, что делает ваш код в производстве.", "Набор модулей Джексона, которые предоставляют сериализаторы для большинства классов метрик.", "Netty - это клиент-серверная инфраструктура NIO, которая позволяет быстро и легко разрабатывать сетевые приложения, такие как серверы протоколов и клиенты", "Netty - это клиент-серверная инфраструктура NIO, которая позволяет быстро и легко разрабатывать сетевые приложения, такие как серверы протоколов и клиенты", "Netty - это клиент-серверная инфраструктура NIO, которая позволяет быстро и легко разрабатывать сетевые приложения, такие как серверы протоколов и клиенты", "Netty - это клиент-серверная инфраструктура NIO, которая позволяет быстро и легко разрабатывать сетевые приложения, такие как серверы протоколов и клиенты", "Netty - это клиент-серверная инфраструктура NIO, которая позволяет быстро и легко разрабатывать сетевые приложения, такие как серверы протоколов и клиенты", "Netty - это клиент-серверная инфраструктура NIO, которая позволяет быстро и легко разрабатывать сетевые приложения, такие как серверы протоколов и клиенты", "Документация по JSON API для Spring-приложений", "Документация по JSON API для Spring-приложений", "Документация по JSON API для Spring-приложений", "Документация по JSON API для Spring-приложений", "Документация по JSON API для Spring-приложений", "Документация по JSON API для Spring-приложений", "Документация по JSON API для Spring-приложений", "Swagger Аннотации", "Swagger Аннотации", "Swagger Core", "Swagger JAXRS", "Модели Swagger", "Swagger Parser", "Независимая от транспорта клиентская и серверная среда для DCE / RPC в Java", "JCIFS - это клиентская библиотека с открытым исходным кодом, которая реализует сетевой протокол CIFS / SMB на 100% Java", "Для идентификации TCP / IP как семейство протоколов для конечной точки", "Среда активации JavaBeans (TM) используется API JavaMail (TM) для управления данными MIME", "Общие аннотации для API платформы JavaTM", "Общие аннотации для API платформы JavaTM", "JSR107 API и SPI", "API языка выражений 3.0", "API javax.inject", "Jamas API", "JavaMail API JAR", "Джава дал архитектуру разъема", "API библиотеки тегов JavaServer Pages (TM)", "API сервлетов Java", "API-интерфейс Project GlassFish для Java-транзакций", "API проверки бинов", "API проверки бинов", "JSR 356: Java API для WebSocket", "JSR", "Java API для веб-сервисов RESTful", "JSR311 API", "JAXB API", "StAX API - это стандартный API обработки XML Java, определенный в JSR-173", "JavaEE API", "Jaxen - это универсальный движок XPath для Java.", "Библиотека классов общего назначения Java", "Библиотека диаграмм для платформы Java", "Библиотека Java для обработки ввода с консоли", "Библиотека даты и времени, чтобы заменить обработку даты JDK", "Этот файл является частью угрюмых модулей.", "Библиотека логирования", "Библиотека логирования", "Простая Java-оболочка для интерфейса командной строки FFmpeg", "Byte Buddy - это библиотека Java для создания классов Java во время выполнения.", "Реализация EdDSA на Java", "Собственный доступ к Java", "Платформа нативного доступа Java", "SezPoz Библиотека", "Основные классы для модуля JSON", "Zip4j - библиотека Java для zip-файлов и потоков", "Java-рефлексы дают низкую производительность при вызове метода-получателя, вызываемого конструктором, средства доступа, использующие средства доступа, используют ASM для ускорения этих вызовов.", "JSON (JavaScript Object Notation) - это легкий формат обмена данными.", "Ehcache - это чистый Java, внутрипроцессный кеш со следующими функциями: быстрый, простой, действует как подключаемый кеш для Hibernate 2.1.", "Простая библиотека Java для преобразования объекта в другой объект.", "Библиотека Java для анализа параметров командной строки", "Библиотека Java для преобразования bean-компонентов, карт и XML в JSON.", "XSLT и XQuery Processor", "Коллекции", "Диалект Thymeleaf, который позволяет вам использовать шаблоны макета / декоратора для оформления вашего контента.", "OGNL расшифровывается как Object-Graph Navigation Language", "Эффективный и настраиваемый алгоритм TreeLayout в Java.", "Acegi Security Core", "ANTLR 4 Runtime", "Упрощенный протокол буфера Java API.", "ActiveMQ реализация протокола обмена сообщениями AMQ", "Реализация ActiveMQ Message Broker", "ActiveMQ компонент для Camel", "ActiveMQ компонент для Camel", "Реализация клиента ActiveMQ", "Поддержка протокола ActiveMQ HTTP", "Коллекция общих модулей входа в систему JAAS", "Общий JMS-пул ConnectionFactory", "Реализация магазина ActiveMQ KahaDB", "Реализация протокола ActiveMQ MQTT", "Модуль поддержки ActiveMQ Openwire Legacy", "ActiveMQ пул соединений фабрика", "ActiveMQ Spring Integration", "Реализация протокола ActiveMQ STOMP", "Web Connector для REST API и поддержка Streamlets", "Сборщик Apache Ant Core", "Apache Ant Launcher", "Поддержка Camel Barcode (например, QRcode, PDF417, DataMatrix)", "Поддержка формата данных Camel Base64", "Поддержка Camel Cache на основе ehCache", "Маршрутизатор на базе Core Camel POJO", "Маршрутизатор на базе Core Camel POJO", "Криптографическая поддержка Camel", "Поддержка Camel CSV", "Поддержка Camel CXF", "Верблюжий транспорт для Apache CXF", "Поддержка брокера для системы преобразования типов Dozer", "Поддержка Camel Ehcache", "Поддержка верблюдов для выполнения системных команд", "Поддержка Camel FTP", "Маршрутизатор на базе Core Camel Java DSL", "Поддержка Camel Groovy", "Поддержка Camel HTTP (Apache HttpClient 4.x)", "Верблюд HTTP общий", "Поддержка брокера Джексона", "Поддержка Camel JAXB", "Поддержка Camel Jetty9", "Поддержка Camel Jetty 9.x", "Поддержка Camel JMS", "Поддержка Camel JMS", "Поддержка Camel JPA", "Проверка схемы JSON Camel на основе библиотеки SON-схемы NetworkNT", "Поддержка Camel Kafka", "Поддержка Camel LDAP", "Использование LevelDB в качестве постоянного хранилища EIP", "Использование LevelDB в качестве постоянного хранилища EIP", "Поддержка Camel Mail", "Компонент мониторинга на основе Camel Metrics", "Поддержка Camel OPC UA", "Поддержка Camel MINA 2.x", "Компонент связи на основе сокета Camel Netty NIO", "Поддержка принтеров Camel", "Camel RabbitMQ Component", "Поддержка Camel REST с использованием Swagger", "Поддержка Camel SAXON", "Поддержка Camel Script", "Чистый Java JMS Camel Component", "Поддержка Camel Spark (REST DSL)", "Поддержка Camel Spring", "Поддержка Camel Spring", "Поддержка Camel для Spring Web Services", "Поддержка Camel SQL", "Поддержка Camel SSH", "Поддержка Camel Stream (System.in, System.out, System.err)", "Поддержка Rest-DSL для использования Swagger API-DOC", "Поддержка Camel Syslog", "Поддержка Camel Telegram", "Camel юнит тестирование", "Тестирование camel с помощью Spring", "Camel WebSocket с использованием Jetty", "Формат данных Camel XML JSON", "Поддержка Camel XStream", "Поддержка Camel Zip файлов", "Пакет Apache Commons Collections содержит типы, которые расширяют и дополняют Java Collections Framework.", "Commons Compress - это компонент, содержащий пакеты Ar, Cpio, Jar, Tar, Zip и BZip2.", "Commons Compress - это компонент, содержащий пакеты Ar, Cpio, Jar, Tar, Zip и BZip2.", "Commons Compress - это компонент, содержащий пакеты Ar, Cpio, Jar, Tar, Zip и BZip2.", "Этот пакет просто оборачивает $ {pkgArtifactId} - $ {pkgVersion} .jar.", "Библиотека для надежного выполнения внешних процессов внутри JVM", "Apache Commons Lang, пакет служебных классов Java для классов, которые находятся в иерархии java.lang или считаются настолько стандартными, чтобы оправдать существование в java.lang.", "Apache Commons Lang, пакет служебных классов Java для классов, которые находятся в иерархии java.lang или считаются настолько стандартными, чтобы оправдать существование в java.lang.", "Apache Commons Lang, пакет служебных классов Java для классов, которые находятся в иерархии java.lang или считаются настолько стандартными, чтобы оправдать существование в java.lang.", "Apache Commons Lang, пакет служебных классов Java для классов, которые находятся в иерархии java.lang или считаются настолько стандартными, чтобы оправдать существование в java.lang.", "Проект Apache Commons Math - это библиотека легких, самостоятельных компонентов математики и статистики, предназначенных для решения наиболее распространенных практических проблем, которые не всегда доступны в языке программирования Java или Commons-Lang.", "Библиотека пула объектов Apache Commons.", "Apache Commons Text - это библиотека, ориентированная на алгоритмы, работающие со строками.", "Apache CXF Core", "Apache CXF Core", "Привязка времени выполнения Apache CXF", "Привязка времени выполнения Apache CXF", "Apache CXF Runtime JAXB DataBinding", "Apache CXF Runtime JAX-RS Фронтенд", "Apache CXF Runtime JAX-WS Frontend", "Apache CXF Runtime Простой интерфейс", "Клиент Apache CXF JAX-RS", "Apache CXF Runtime HTTP Transport", "Apache CXF Runtime HTTP Jetty Transport", "Apache CXF Runtime WS Адресация", "Политика Apache CXF Runtime WS", "Apache CXF Runtime Core для технологий на основе WSDL", "Ftplets, как и сервлеты, представляют собой API-интерфейс для подключения к жизненному циклу запросов FtpServer.", "Apache FtpServer Core", "J2EE Management 1.1", "JMS 1.1", "API Java Message Service 2.0", "Зота 1,5", "Библиотека Java и клиент командной строки для высокопроизводительной параллельной загрузки / выгрузки через HTTP / HTTPS.", "HttpComponents Core (совместимый с Java 1.3)", "Промежуточное программное обеспечение на основе Java для обработки больших данных в памяти в распределенной среде.", "Промежуточное программное обеспечение на основе Java для обработки больших данных в памяти в распределенной среде.", "Промежуточное программное обеспечение на основе Java для обработки больших данных в памяти в распределенной среде.", "Апач Кафка", "Дополнительные анализаторы", "Apache Lucene Java Core", "Модуль Lucene Queries", "Модуль Lucene QueryParsers", "Lucene Sandbox", "Apache MINA Core 3.0.0 M2", "Apache MINA Core 3.0.0 M2", "POM был создан из install: install-file", "Высокопроизводительная, легковестная библиотека обмена сообщениями", "Этот пакет просто оборачивает $ {pkgArtifactId} - $ {pkgVersion} .jar.", "Библиотека Java для поддержки протоколов SSH на стороне клиента и сервера", "Commons XMLSchema - это легковесная объектная модель схемы, которую можно использовать для управления или генерации схемы XML.", "Commons XMLSchema - это легковесная объектная модель схемы, которую можно использовать для управления или генерации схемы XML.", "Xbean-spring предоставляет управляемый схемой проприетарный обработчик пространства имен для контекстов Spring", "Основная банка XmlBeans", "Компонент Camel JCIFS (SMB)", "Ткач AspectJ представляет советы для классов Java", "Богатые и беглые утверждения для тестирования на Java", "Java API Bouncy Castle для обработки протокола OpenPGP.", "Java API Bouncy Castle для CMS, PKCS, EAC, TSP, CMP, CRMF, OCSP и генерации сертификатов.", "Пакет Bouncy Castle Crypto представляет собой Java-реализацию криптографических алгоритмов.", "Gant - это инструмент сборки для сценариев задач Ant, использующий Groovy вместо XML для определения логики сборки.", "Groovy: мощный, динамичный язык для JVM", "Groovy: мощный, динамичный язык для JVM", "Маппер", "Data Mapper - это высокопроизводительный пакет привязки данных, построенный на процессоре JSON JSON.", "Реализация StAX для JSON.", "Животные Sniffer Аннотации", "Компонент архиватора Plexus", "Контейнерный API-интерфейс Plexus IoC и его реализация по умолчанию.", "Компоненты сплетения IO", "Коллекция различных служебных классов для облегчения работы со строками, файлами, командными строками, XML и многим другим.", "Stax2 API - это расширение базового API Stax 1.0, которое добавляет новые важные функции, такие как полнофункциональный интерфейс двунаправленной проверки и высокопроизводительный API Typed Access.", "Woodstox - это высокопроизводительный процессор XML, который реализует API-интерфейсы Stax (JSR-173) и SAX2", "Библиотека для маппинга", "Реализация алгоритма хеширования паролей в OpenBSD Blowfish", "Conscrypt: OpenJdk UberJAR", "Jetty :: HTTP2 :: Common", "Jetty :: HTTP2 :: HPACK", "Jetty :: HTTP2 :: Сервер", "Javax WebSocket Client", "Javax WebSocket Server Impl", "Jetty :: Websocket :: API", "Jetty :: Websocket :: Клиент", "Jetty :: Websocket :: Common", "Jetty :: Websocket :: Сервер", "Jetty :: Websocket :: Сервлет", "Причал :: ALPN :: Клиент", "Jetty :: ALPN :: Conscrypt Client Реализация", "Jetty :: ALPN :: Conscrypt Server Реализация", "Причал :: ALPN :: Сервер", "Аннотация поддержки для развертывания сервлетов в пристани.", "Jetty :: Асинхронный HTTP-клиент", "Асинхронный API", "Jetty :: Http Utility", "Jetty :: IO Utility", "Артефакт управления JMX для пристани.", "JNDI spi impl для пространства имен Java.", "Услуги в стиле Jetty JavaEE", "Инфраструктура безопасности причала", "Основной артефакт сервера Jetty.", "Контейнер для сервлетов Jetty", "Сервисные сервлеты от Jetty", "Утилиты для Jetty", "Поддержка веб-приложений Jetty", "Пристани xml утилиты.", "Поддержка HTTP на основе Apache httpclient", "Git осознает реализацию HTTP-сервера.", "Доступ к репозиторию и алгоритмы", "SDK Client", "Milo - это реализация OPC UA с открытым исходным кодом. Он включает в себя высокопроизводительный стек (каналы, сериализацию, структуры данных, безопасность), а также клиентские и серверные SDK, построенные поверх стека.", "SDK Server", "Клиент стека", "Ядро стека", "Milo - это реализация OPC UA с открытым исходным кодом. Он включает в себя высокопроизводительный стек (каналы, сериализацию, структуры данных, безопасность), а также клиентские и серверные SDK, построенные поверх стека.", "Ehcache - это чистый Java, внутрипроцессный кеш со следующими функциями: быстрый, простой, действует как подключаемый кеш для Hibernate 2.1.", "HawtBuf", "HawtDispatch: API стиля libdispatch для Java", "HawtDispatch Transport: Транспортные абстракции для HawtDispatch", "API, который проектирует с использованием HawtJNI, должен создавать против него.", "Jansi - это Java-библиотека для генерации и интерпретации escape-последовательностей ANSI.", "Uber jar, который содержит все библиотеки и зависимости платформы leveldbjni", "Uber jar, который содержит все библиотеки и зависимости платформы leveldbjni", "Mqtt-client предоставляет лицензированный API ASL 2.0 для MQTT.", "Реализация языка выражения 2.2", "Библиотека IPC с общей памятью для Apache Ignite.", "Автономная банка подколенного сухожилия, содержащая все подмодули в одном артефакте.", "Core Hamcrest API - устарел, используйте вместо него «hamcrest»", "Библиотека совпадений Hamcrest - устарела, используйте вместо нее hamcrest", "Библиотека совпадений Hamcrest - устарела, используйте вместо нее hamcrest", "Следуя принципу СУХОЙ (не повторять себя), Hibernate Validator позволяет вам выражать ограничения вашего домена один раз (и только один раз) и автоматически обеспечивать их соответствие на различных уровнях вашей системы.", "Следуя принципу СУХОЙ (не повторять себя), Hibernate Validator позволяет вам выражать ограничения вашего домена один раз (и только один раз) и автоматически обеспечивать их соответствие на различных уровнях вашей системы.", "Порт LevelDB для Java", "Java API высокого уровня для LevelDB", "Java API высокого уровня для LevelDB", "Javassist (помощник по программированию на Java) - это отражающая система времени загрузки для Java.", "Каркас JBoss Logging", "Полное решение на основе Java для доступа, манипулирования и вывода данных XML", "Объектная модель документа XML на основе Java Collections Framework", "Дженкинс файл для работы с командной строкой", "Код ядра Jenkins и просмотр файлов для визуализации HTML.", "Содержит загрузочный код для объединения отдельных виртуальных машин Java в одно пространство с общим доступом.", "Содержит код набора иконок Jenkins, на который полагаются как Jenkins Core, так и плагин icon shim.", "Родительский проект POM для плагинов Jenkins", "Родительский проект POM для плагинов Jenkins", "Этот плагин позволяет хранить учетные данные в Jenkins.", "Предоставляет точку расширения DisplayURLProvider для предоставления альтернативных URL-адресов для использования в уведомлениях.", "Интегрирует Jenkins с Git SCM", "Утилита плагин для поддержки Git в Jenkins", "Библиотека тестирования", "Этот плагин позволяет настроить уведомления по электронной почте для результатов сборки", "Многоконфигурационный (матричный) тип проекта.", "Этот плагин предоставляет новый расширенный API для взаимодействия с системами SCM.", "Позволяет администраторам Jenkins контролировать, какие внутрипроцессные сценарии могут запускаться пользователями с меньшими правами.", "Позволяет хранить учетные данные SSH в Jenkins", "Плагин библиотеки для плагинов DSL, которым нужны имена для объектов Jenkins.", "Создает индекс аннотаций.", "Библиотека на основе преобразования байт-кода для управления обратной совместимостью", "Java и XML на основе сценариев и обработки для превращения XML в исполняемый код", "Реализация языка выражений JSTL с расширениями", "Простая утилита для сканирования байт-кода Java на наличие ссылок на классы в пуле констант.", "Эта библиотека предоставляет набор классов, которые упрощают использование крипто-библиотеки Java", "Многоадресная реализация DNS для Java", "Код для мониторинга использования памяти / подкачки", "Родительский проект POM для плагинов Jenkins", "Реактор Дженкинса", "Ganymed SSH2 для Java - это библиотека, которая реализует протокол SSH-2 в чистой Java", "Предлагает API-классы для анализа и сравнения номеров версий", "Набор аннотаций, используемых для поддержки проверки кода и документирования кода.", "Набор аннотаций, используемых для поддержки проверки кода и документирования кода.", "JOOλ является частью серии jOOQ (наряду с jOOQ, jOOX, jOOR, jOOU), предоставляя некоторые полезные расширения для лямбд Java 8.", "JOOQ", "XOK Next", "JOOX - это рекурсивная аббревиатура, обозначающая jOOX Object Oriented XML.", "Общие кросс-проектные / кроссплатформенные API POSIX", "JSON - это легкий, независимый от языка формат обмена данными.", "Jsonschema2pojo Core", "Jsonschema2pojo скаляры", "jsoup - это библиотека Java для работы с реальным HTML.", "Java Activation Framework с патчем", "Библиотека тегов Jelly Define", "JTidy - это Java-порт HTML Tidy, средство проверки синтаксиса HTML и симпатичный принтер. Как и его двоюродный брат, не являющийся Java, JTidy можно использовать в качестве инструмента для очистки искаженного и неисправного HTML. Кроме того, JTidy предоставляет анализатор DOM для реального HTML", "XStream Core", "локализатор", "Надежная клиентская библиотека HTTP", "Убить дерево процессов в Windows", "Тип Арифметическая библиотека для Java5", "Чистый Java COM Bridge", "Чистый Java COM Bridge", "org.kohsuke.stapler:json-lib", "Механизм обработки HTTP-запросов степлера", "Степлер Дополнение CodeMirror", "Временная шкала сшивателя", "Степлер Адъюнкт для ZeroClipboard", "Механизм обработки HTTP-запросов", "Желейный переплет для степлера", "Поддержка перезагрузки JRebel для степлера", "Пользовательские аннотации модификатора доступа", "Встраиваемая библиотека демонизации", "Пакет ObjectWeb ASM переименован для изоляции несовместимостей между основными версиями.", "Выполняет ненадежный скрипт Groovy безопасно", "Libpam4j", "libzfs для Java", "Загружает ключ SSH в формате PuTTY", "Windows Package Checker", "Java-порты и привязки алгоритма сжатия LZ4 и алгоритма хеширования xxHash", "MapStruct Core", "Проект MockFtpServer предоставляет фиктивный / фиктивный FTP-сервер для тестирования клиентского кода FTP.", "Библиотека фиктивных объектов для Java", "API и реализация библиотеки Mockito Mock Objects Core", "ModelMapper", "MortBay :: Apache EL :: API и реализация", "Библиотека для создания экземпляров объектов Java", "Открытый тестовый альянс для JVM", "Очень маленькая и быстрая среда манипулирования байт-кодом Java", "Очень маленькая и быстрая среда манипулирования байт-кодом Java", "Очень маленькая и быстрая среда манипулирования байт-кодом Java", "Очень маленькая и быстрая среда манипулирования байт-кодом Java", "API статического анализа кода ASM, очень маленькая и быстрая среда манипулирования байт-кодом Java", "API статического анализа кода ASM, очень маленькая и быстрая среда манипулирования байт-кодом Java", "Очень маленькая и быстрая среда манипулирования байт-кодом Java", "Очень маленькая и быстрая среда манипулирования байт-кодом Java", "Tree API ASM, очень маленькая и быстрая среда манипулирования байт-кодом Java", "Tree API ASM, очень маленькая и быстрая среда манипулирования байт-кодом Java", "Утилиты для ASM, очень маленькая и быстрая среда манипулирования байт-кодом Java", "Приправьте Java: автоматическое управление ресурсами, автоматическая генерация методов получения, установки, равенства, hashCode и toString и многое другое!", "Приправьте Java: автоматическое управление ресурсами, автоматическая генерация методов получения, установки, равенства, hashCode и toString и многое другое!", "Приправьте Java: автоматическое управление ресурсами, автоматическая генерация методов получения, установки, равенства, hashCode и toString и многое другое!", "Размышления - анализ метаданных среды выполнения Java", "Универсальные утилиты устойчивости для Java 8 (прерыватели, тайм-ауты, ограничители скорости и обработчики для ненадежных или противоречивых результатов)", "Более богатая регистрация для тестовых наборов Java", "Прослушивает порт TCP и прокси-соединения к сокету домена UNIX.", "JCIFS - это клиентская библиотека с открытым исходным кодом, которая реализует сетевой протокол CIFS / SMB на 100% Java", "Стандартная библиотека для языка программирования Scala", "Библиотека для загрузки нативных библиотек.", "Библиотека для разработки RESTful, но гибких API", "Реализация JCL 1.1.1 поверх SLF4J", "Реализация JCL 1.1.1 поверх SLF4J", "JUL в SLF4J мост", "JUL в SLF4J мост", "Log4j реализован поверх SLF4J", "Log4j реализован поверх SLF4J", "API slf4j", "API slf4j", "API slf4j", "API slf4j", "Связывание SLF4J LOG4J-12", "Связывание SLF4J LOG4J-12", "Связывание SLF4J LOG4J-12", "Spring Boot позволяет легко создавать автономные производственные приложения на основе Spring, которые можно «просто запустить»", "Стартер для использования Spring Boot's Actuator, который предоставляет готовые к работе функции, которые помогут вам контролировать и управлять вашим приложением", "Spring Boot AutoConfigure", "Процессор аннотации конфигурации Spring Boot", "Инструменты разработчика Spring Boot", "Базовый стартер, включая поддержку автоконфигурации, протоколирование и YAML", "Стартер для обмена сообщениями JMS с использованием Apache ActiveMQ", "Стартер для использования Jetty в качестве встроенного контейнера сервлетов.", "Стартер для входа с использованием Logback.", "Стартер для использования Spring Security", "Стартер для тестирования приложений Spring Boot с библиотеками, включая JUnit, Hamcrest и Mockito", "Стартер для создания веб-приложений MVC с использованием представлений Thymeleaf", "Стартер для создания веб, в том числе RESTful, приложений, использующих Spring MVC.", "Стартер для создания приложений WebSocket с использованием поддержки Spring Framework WebSocket", "Стартер для тестирования приложений Spring Boot с библиотеками, включая JUnit, Hamcrest и Mockito", "Spring Boot Test AutoConfigure", "Spring Data Core", "Spring Integration Core", "Spring Integration Core", "Spring-ldap-core", "Базовая инфраструктура плагинов", "Пакет расширений для плагинов на основе метаданных", "Spring Retry предоставляет абстракцию вокруг повторения неудачных операций, с упором на декларативное управление процессом и поведение на основе политик, которое легко расширять и настраивать.", "Модуль безопасности Spring", "Модуль безопасности Spring", "Модуль безопасности Spring", "Модуль безопасности Spring", "Spring сессия", "Базовый пакет Spring Web Services.", "Пакет поддержки Spring Web Services.", "Различные классы поддержки XML для Spring Web Services", "Spring Framework: AOP", "Spring Framework: аспекты", "Spring Framework: Beans", "Spring Framework: контекст", "Spring Framework: Core", "Spring Expression Language (SpEL)", "Spring Framework: JDBC", "Spring Framework: JMS", "Spring Messaging", "Spring Object / Relational Mapping", "Spring Object / XML Mapping абстракция", "Spring Framework: Тест", "Spring Framework: транзакция", "Spring Framework: Web", "Spring Framework: WebMVC", "Spring WebSocket", "Управление изолированным контейнером для тестирования кода Java", "Современный серверный шаблонизатор Java для веб-приложений и автономных сред", "Современный серверный шаблонизатор Java для веб-приложений и автономных сред", "Расширенная, но простая в использовании библиотека escape / unescape для Java", "WebJar для Swagger UI", "WebJar Locator", "Функциональность WebJar Locator Core", "Snappy-java: библиотека быстрого сжатия / распаковки", "XMLUnit для Java", "Уровень совместимости XMLUnit 1.x", "XMLUnit предоставляет вам инструменты для проверки того, какой XML-файл вы хотите создать", "Парсер и эмиттер YAML 1.1 для Java", "Oro", "RelaxngDatatype", "Клиент взаимодействия с WMQ", "StAX API - это стандартный API обработки XML Java, определенный в JSR-173", "Этот пакет просто оборачивает $ {pkgArtifactId} - $ {pkgVersion} .jar.", "Сериализатор для записи XML, HTML и т. Д. В виде потока символов из входного DOM или из входных событий SAX.", "Этот пакет просто оборачивает $ {pkgArtifactId} - $ {pkgVersion} .jar.", "Xerces2 - это новое поколение высокопроизводительных, полностью совместимых анализаторов XML в семействе Apache Xerces.", "Xml-commons предоставляет Apache-размещенный набор интерфейсов DOM, SAX и JAXP для использования в других проектах на основе xml.", "Xml-commons предоставляет Apache-размещенный набор интерфейсов DOM, SAX и JAXP для использования в других проектах на основе xml.", "API XML Pull Parsing", "XOM Dual Streaming / Tree API для обработки XML", "Этот пакет просто оборачивает $ {pkgArtifactId} - $ {pkgVersion} .jar.", "MXP1 - это стабильный механизм синтаксического анализа XmlPull, основанный на идеях XPP и, в частности, XPP2, но полностью пересмотренный и переписанный, чтобы использовать все преимущества последних JVM JIT, таких как Hotspot в JDK 1.4+."};
        for (int i = 0; i < names.length; i++) {
//            System.out.println(names[i].split("/")[1]);
            table.put(names[i].replace("/", ":"), values[i]);
        }
        for (String oneClass : files) {
            String[] splitData = oneClass.split(":");
            String orgName = splitData[0];
            String fullLibName = splitData[0]+":"+splitData[1];
            String nameClass = splitData[1].trim();
//            System.out.println(nameClass);
//            System.out.println(findInMap(nameClass));
            String match = findInMap(fullLibName);
            String version = splitData[2].trim();
            if (!match.equals("0")) {
                System.out.println(fullLibName + ";" + version + ";" + match.substring(0, 1).toUpperCase() + match.substring(1));
                continue;
            }
            ChromeDriverManager.getInstance(DriverManagerType.CHROME).setup();
            Configuration.startMaximized = true;
            open("https://mvnrepository.com/");
            perevodPage.mavenSearch.val(nameClass);
            perevodPage.searchButton.click();
            if (perevodPage.firstMatchClassName.exists() && perevodPage.firstMatchOrgName.getText().equals(orgName)) {
                perevodPage.firstMatchClassName.click();
                russanAnswer = translate(perevodPage.libDesc.getText());
                System.out.println(fullLibName + ";" + version + ";" + russanAnswer);
                continue;
            }
            open("https://mvnrepository.com/");
            perevodPage.mavenSearch.val(fullLibName);
            perevodPage.searchButton.click();
            if (perevodPage.firstMatchClassName.exists() && perevodPage.firstMatchOrgName.getText().equals(orgName)) {
                perevodPage.firstMatchClassName.click();
                russanAnswer = translate(perevodPage.libDesc.getText());
                System.out.println(fullLibName + ";" + version + ";" + russanAnswer);
                continue;
            }

            open("https://findjar.com");
            perevodPage.nameClassInput.val(fullLibName);

//            basePage.val(perevodPage.nameClassInput, finalName);
            perevodPage.nameClassButton.click();
//            basePage.click(perevodPage.nameClassButton);


            try {
                perevodPage.resultList.get(0).waitUntil(Condition.visible, 5000);
            } catch (AssertionError e) {
                System.out.println(fullLibName + ";" + version + ";Джарников нет");
                continue;
            }


            ArrayList<String> urls = new ArrayList<>();
            for (SelenideElement unit : perevodPage.resultList) {
                urls.add(unit.attr("href"));
            }
//            System.out.println("Список вариантов: " + urls);
            for (String unit : urls) {
                russanAnswer = "null";
                open(unit);
                try {
                    perevodPage.nameResponse.waitUntil(Condition.visible, 2000);
                } catch (AssertionError e) {
//                    System.out.println("Имя не найдено да и по фиг");
                }

                if (perevodPage.description.exists() && !perevodPage.description.getText().equals("")) {
                    String description = perevodPage.description.getText();
//                    System.out.println(nameClass + "; "+description+"; " + nameClass.split(":")[2]);
//                    System.out.println("\n\n\nОписание: " + description);
                    russanAnswer = translate(description);
                    System.out.println(fullLibName + ";" + version + ";" + russanAnswer.substring(0, 1).toUpperCase() + russanAnswer.substring(1));


                    open("https://findjar.com");
                    break;
                }
            }
            if (russanAnswer.equals("null")) {
                System.out.println(fullLibName + ";" + version + ";Нет описания");
            }

        }
    }

    private String translate(String descritption) {
        open("https://translate.google.ru/");
        perevodPage.translaterInput.val(descritption);
//                    basePage.val(perevodPage.translaterInput, description);
        sleep(1000);
        return perevodPage.translaterOutput.getText()+"TRANSLATEGOO";
    }

    public String findInMap(String key) {
        if (table.get(key) != null) {
            return table.get(key);
        }return "0";
    }
}
